---
import '@/styles/globals.css';

import Layout from '@/layouts/Layout.astro';

import About from '@/components/sections/About.astro';
import Education from '@/components/sections/Education.astro';
import Experience from '@/components/sections/Experience.astro';
import Hero from '@/components/sections/Hero.astro';
import Projects from '@/components/sections/Projects.astro';
import Skills from '@/components/sections/Skills.astro';
import Footer from '@/components/sections/Footer.astro';

import { basics } from '@cv';
import Certifications from '@/components/sections/Certifications.astro';
const { name, label } = basics;
---

<Layout title={`Portafolio de ${name} - ${label}`}>
  <main>
    <Hero />
    <About />
    <Skills />
    <Experience />
    <Education />
    <Projects />
    <Certifications />
    <Footer />
  </main>
</Layout>

<style>
  main {
    padding: 4rem;
    margin: auto;
    width: 100%;
  }

  @media (width <= 700px) {
    main {
      padding: 2rem;
    }
  }
</style>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class'],
    });
  }
</script>
